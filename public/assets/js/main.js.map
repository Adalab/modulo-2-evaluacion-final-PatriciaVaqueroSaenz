{"version":3,"sources":["01-search.js","02-fav.js","03-deleteFav.js"],"names":[],"mappingsvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.js","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n'use strict';\n\nconsole.log('>> Ready :)');\n\nconst searchButton = document.querySelector('.js-searchButton');\nconst resultList = document.querySelector('.js-main-list');\nconst favoriteList = document.querySelector('.main__list-favorite');\nlet showsName;\nlet showsImage;\nlet showsImageMedium;\nlet showId;\nlet globalData;\nlet favorites = [];\nconst defaultImage = 'https://via.placeholder.com/210x295/ffffff/666666/?text=TV';\n\n\nfunction conectToApi(){\n\n  const inputValue = document.querySelector('.js-searchInput').value;\n\n\n  fetch(`//api.tvmaze.com/search/shows?q=${inputValue}`)\n    .then((response) => response.json())\n    .then((data) => {\n      globalData = data;\n      //almaceno en ls globaldata\n      localStorage.setItem('globalData', JSON.stringify(data));\n      printShows(globalData);\n    });\n\n  printFavoriteList(globalData);\n\n}\n\nfunction printShows(globalData){\n\n  //LIMPIO LA LISTA CON LOS RESULTADOS DE BÚSQUEDA\n  resultList.innerHTML ='';\n\n  for (let i=0; i< globalData.length;i++){\n    //DEVUELVE EL NOMBRE DE LAS SERIES COINCIDENTES CON LO ESCRITO EN EL INPUT\n    showsName = globalData[i].show.name;\n    //DEVUELVE LA IMAGEN DE LAS SERIES COINCIDENTES CON LO ESCRITO EN EL INPUT\n    showsImage = globalData[i].show.image;\n    //DEVUELVE EL ID DE LAS SERIES COINCIDENTES CON LO ESCRITO EN EL INPUT\n    showId = globalData[i].show.id;\n\n    // Buscar si la paleta que se está pintando está en favoritos\n    const isPresent = favorites.find( favoriteId => favoriteId === showId);\n\n\n    // Si el id está en favoritos, se renderiza el li con la clase favorite\n    let classFavorite = '';\n    if( isPresent === undefined ) {\n      classFavorite = '';\n    }\n    else {\n      classFavorite = 'favorite';\n    }\n\n    //PARA EL CASO EN QUE LA SERIE NO TENGA IMAGEN\n    if (showsImage === null){\n\n      resultList.innerHTML += `<li data-id=\"${showId}\" class=\"js-list-item ${classFavorite}\"><div class=\"js-list-div\"><h2 class=\"js-showName\">${showsName}</h2><img class= \"js-image\" src=\"https://via.placeholder.com/210x295/ffffff/666666/?text=TV\"/></div></li>`;\n\n      //PARA LAS SERIES CON IMAGEN LA AÑADE AL LI\n    }else{\n      showsImageMedium = globalData[i].show.image.medium;\n\n      resultList.innerHTML += `<li data-id=\"${showId}\" class=\"js-list-item ${classFavorite}\"><div class=\"js-list-div\"><h2 class=\"js-showName\">${showsName}</h2><img class=\"js-image\" src=\"${showsImageMedium}\"/></div></li>`;\n\n    }\n\n  }\n  addListenerToCards();\n}\n\nfunction handleClik(){\n  conectToApi();\n}\n\nsearchButton.addEventListener('click',handleClik);\n\n\n// SI TIENE DATOS ALMACENADOS EN LS LOS COGEMOS Y PINTAMOS EN LISTA SERIES FAVORITAS\nif(localStorage.getItem('favorites') !== null) {\n\n  const savedFav = JSON.parse( localStorage.getItem('favorites'));\n  const savedGD = JSON.parse( localStorage.getItem('globalData'));\n\n  for (const fav of savedFav) {\n    const filteredLS = savedGD.find( data => data.show.id === fav);\n    if (filteredLS.show.image === null){\n      favoriteList.innerHTML += `<li data-id=\"${filteredLS.show.id}\" class=\"list-fav\"><div class=\"div-fav\"><h1 class=\"title-fav\">${filteredLS.show.name}</h1><img class=\"img-fav\" src=\"https://via.placeholder.com/210x295/ffffff/666666/?text=TV\"/><i data-id=\"${filteredLS.show.id}\" class=\"fas fa-times-circle remove-fav\"></i></div></li>`;\n    }else{\n      favoriteList.innerHTML += `<li data-id=\"${filteredLS.show.id}\" class=\"list-fav\"><div class=\"div-fav\"><h1 class=\"title-fav\">${filteredLS.show.name}</h1><img class=\"img-fav\" src=\"${filteredLS.show.image.medium}\"/><i data-id=\"${filteredLS.show.id}\" class=\"fas fa-times-circle remove-fav\"></i></div></li>`;\n    }\n  }\n\n  addListenerToIcon();\n}","/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n/* eslint-disable strict */\n\nconst inputShow = document.querySelector('.js-searchInput');\nlet filteredShows = [];\n\nfunction addListenerToCards(){\n  const allCards = document.querySelectorAll('.js-list-item');\n  for( const  card  of allCards ) {\n    card.addEventListener('click', handleClickCard);\n  }\n}\n\nfunction handleClickCard(event) {\n\n  //IDENTIFICAR LI PULSADA\n  const whereIAddedTheEvent = event.currentTarget;\n\n  //OBTENER ID ASOCIADO A LA SERIE CLICKADA\n  const showId = whereIAddedTheEvent.dataset.id;\n\n  // Buscar si la paleta clickada está en favoritos\n  const isPresent = favorites.find( favoriteId => favoriteId === parseInt(showId));\n\n  if( isPresent === undefined ) {\n    // El ID de la serie en la que ha hecho click no está en el array de favoritos\n    favorites.push( parseInt(showId));\n  }\n  else {\n    favorites = favorites.filter( favoriteId => favoriteId !== parseInt(showId) );\n  }\n\n  localStorage.setItem('favorites', JSON.stringify(favorites));\n\n  printFavoriteList(event);\n  renderFilteredShows();\n}\n\nfunction printFavoriteList(event){\n  if (event !== undefined){\n    const whereIAddedTheEvent = event.currentTarget;\n    const showId = whereIAddedTheEvent.dataset.id;\n    const text = event.srcElement.innerText;\n    const imageFav = event.srcElement.nextSibling.currentSrc;\n\n    favoriteList.innerHTML += `<li data-id=\"${showId}\" class=\"list-fav\"><div class=\"div-fav\"><h1 class=\"title-fav\">${text}</h1><img class=\"img-fav\" src=\"${imageFav}\"/><i data-id=\"${showId}\" class=\"fas fa-times-circle remove-fav\"></i></div></li>`;\n\n    console.log(favoriteList);\n  }else{\n    favoriteList.innerHTML='';\n  }\n\n}\n\nfunction renderFilteredShows() {\n\n  // Coger el valor actual\n  const searchText = inputShow.value.toLowerCase();\n\n  // Filtrar las series que inluyen el campo de búsqueda\n  for (const data of globalData){\n    filteredShows = globalData.filter((data) => data.show.name.toLowerCase().includes(searchText) );\n  }\n  // pintar series\n  printShows(filteredShows);\n\n}\n","/* eslint-disable no-undef */\n/* eslint-disable no-console */\n/* eslint-disable no-unused-vars */\n/* eslint-disable strict */\n\nfunction addListenerToIcon(){\n  const allIcons = document.querySelectorAll('.remove-fav');\n  for( const  icon  of allIcons ) {\n    icon.addEventListener('click', handleClickRemoveFav);\n  }\n}\n\nfunction handleClickRemoveFav(event){\n\n  console.log(event.target); //me coge el icono con id=favorito seleccionado\n  const savedFav = JSON.parse( localStorage.getItem('favorites'));\n  const savedGD = JSON.parse( localStorage.getItem('globalData'));\n  console.log(savedFav); //recupero los datos de ls almacenados en favorites\n  console.log(savedGD);//recupero los datos de ls almacenados en globalData\n\n  //eliminar de ls de favoritos el elemento clickado, pintar de nuevo para que quite los eliminados\n  // for (const fav of savedFav) {\n  //   const filteredLS = savedGD.find( data => data.show.id === fav);\n  //   console.log(filteredLS);\n  // }\n}\n\n\nfunction resetLS(){\n\n  localStorage.clear();\n  favoriteList.innerHTML='';\n  resultList.innerHTML ='';\n}\n\nconst reset = document.querySelector('.section__fav-reset');\nreset.addEventListener('click', resetLS);"]}